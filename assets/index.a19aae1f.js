import{b as t}from"./vendor.df2fbba6.js";const y=function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const d of o.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&l(d)}).observe(document,{childList:!0,subtree:!0});function c(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(e){if(e.ep)return;e.ep=!0;const o=c(e);fetch(e.href,o)}};y();const m=document.getElementById("renderCanvas"),p=new t.exports.Engine(m,!0),u=(r,i)=>Math.floor(Math.random()*(i-r))+r,w=60,M=function(){const r=new t.exports.Scene(p);r.clearColor=new t.exports.Color4(0,0,0,0),new t.exports.UniversalCamera("Camera",new t.exports.Vector3(0,1,0),r).attachControl(m,!0);const c=t.exports.MeshBuilder.CreateSphere("arena",{diameter:100},r);c.rotation.x=1.5,c.flipFaces(!0);const l=new t.exports.StandardMaterial("arenaMat",r);c.material=l,l.wireframe=!0;const e=t.exports.MeshBuilder.CreateSphere("sphere",{segments:4,diameterX:1,diameterY:1,diameterZ:.5},r),o=new t.exports.StandardMaterial("white",r);o.diffuseColor=t.exports.Color3.White(),e.material=o,e.registerInstancedBuffer("color",4),e.instancedBuffers.color=new t.exports.Color4(1,0,0,1),r.createDefaultLight();const d=100;for(let s=0;s<d;s++){const n=e.createInstance("sphere"+s);let a=20*Math.sqrt(Math.random()),f=Math.random()*2*Math.PI;n.position.x=a*Math.cos(f),n.position.y=a*Math.sin(f)+4,n.position.z=w,n.velocity=u(1,15),n.metadata="sphere"+s;let h=new t.exports.Vector3(n.position.x,n.position.y,n.position.z),x=new t.exports.Vector3(0,1,0);t.exports.Animation.CreateAndStartAnimation("anim"+s,n,"position",30,u(3,20)*100,h,x,t.exports.Animation.ANIMATIONLOOPMODE_CONSTANT),e.instancedBuffers.color=new t.exports.Color4(1,Math.random(),Math.random(),1)}return r.onPointerObservable.add(s=>{switch(s.type){case t.exports.PointerEventTypes.POINTERDOWN:var n=s.pickInfo;if(n.hit){var a=n.pickedMesh;a&&(r.stopAnimation(a),a.position.x=0,a.position.y=0,a.position.z=0,a.velocity=0)}break;case t.exports.PointerEventTypes.POINTERPICK:break}}),r.createDefaultXRExperienceAsync(),r},g=M();p.runRenderLoop(function(){g.render()});window.addEventListener("resize",function(){p.resize()});
